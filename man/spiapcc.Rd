% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spiap.r
\name{spiapcc}
\alias{spiapcc}
\title{SPIA-PCC: Signaling pathway impact analysis incorporated the change of Pearson correla-tion coefficient between two groups}
\usage{
spiapcc(de = NULL, all = NULL, gse_madat2 = gse_madat2, normal = NULL,
  tumor = NULL, organism = "hsa", data.dir = NULL, pathids = NULL,
  nB = 2000, plots = FALSE, verbose = TRUE, beta = NULL,
  combine = "fisher", flag = -1)
}
\arguments{
\item{de}{The number of differential genes}

\item{all}{All genes in human}

\item{normal}{the number of normal samples}

\item{tumor}{the number of tumor samples}

\item{flag}{flag = 1,0,-1 , if flag = 1 from normal to tumor, flag = -1 from tumor to normal, flag = 0 stand for absolute value between tow groups}
}
\description{
This function uses the previous SPIA method and integrate the change of
of genes Pearson coefficient(PCC) from two groups. We proposed a set of three
pathway analysis methods based on the change of PCC. We applied these approaches
to colorectal cancer, lung cancer and Alzheimer's disease datasets and so on.
}
\details{
We used a compendium of 22 GEO datasets obtained from the KEGGdzPathwaysGEO
and the KEGGandMetacoreDzPathwaysGEO benchmark sets(Tarca et al., 2012; Tarca et al., 2013)
in this study. These datasets have been specifically chosen as they study a
certain human disease in a corresponding KEGG pathway (e.g. Alzheimer's disease).
These pathways are regarded as the target pathways in the following. We investigate
first how well the individual set- and network-based methods detect the target

The expression data sets involved 11 conditions and 17 tissues.
}
\examples{
#import EnrichmentBrowser, KEGGandMetacoreDzPathwaysGEO, KEGGdzPathwaysGEO and SPIA package
library(EnrichmentBrowser)
library(KEGGandMetacoreDzPathwaysGEO)
library(SPIA)
data("GSE8671")
# Get expression profile of GSE8671
exprs_all <- exprs(GSE8671)
# Add the gene symbol
all.eset <- probe.2.gene.eset(GSE8671)
head(featureNames(all.eset))
before.norm <- exprs(all.eset)
# Gene normalization
all.eset <- normalize(all.eset, norm.method="quantile")
after.norm <- exprs(all.eset)
exprs_all1 <- data.frame(after.norm)
table(pData(all.eset)$Group)
pData(all.eset)$GROUP <- ifelse(pData(all.eset)$Group == "d", 1, 0)
normal <- length(which(pData(all.eset)$GROUP == '0'))
tumor <- length(which(pData(all.eset)$GROUP == '1'))
# Get the differential expression genes in limmar package
all.eset <- de.ana(all.eset)
head(fData(all.eset), n=4)
all_de <- fData(all.eset)
tg <- all_de[all_de$ADJ.PVAL < 0.1,]
DE_colorectal = tg$FC
names(DE_colorectal)<-as.vector(rownames(tg))
ALL_colorectal = rownames(all_de)
#The result of spia method
res_spia = spia(de = DE_colorectal, all=ALL_colorectal, organism="hsa",nB=2000,plots=FALSE,beta=NULL,combine="fisher",verbose=TRUE)
gse_madat2 <- exprs_all1
# The results of SPIA_PCC_NT method
res_nt = spiapcc(de=DE_colorectal, all=ALL_colorectal, gse_madat2 = gse_madat2,normal = normal, tumor = tumor,norganism="hsa",nB=2000,plots=FALSE,
                  beta=NULL,combine="fisher",verbose=T, flag = 1)
#The results of SPIA_PCC_TN method
res_tn = spiapcc(de=DE_colorectal, all=ALL_colorectal, gse_madat2 = gse_madat2, normal = normal, tumor = tumor,organism="hsa",nB=2000,plots=FALSE,
                  beta=NULL,combine="fisher",verbose=T, flag = -1)
#The results of SPIA_PCC_ABS method
res_abs = spiapcc(de = DE_colorectal, all=ALL_colorectal , gse_madat2 = gse_madat2,normal = normal, tumor = tumor,organism="hsa",nB=2000,plots=FALSE,
                  beta=NULL,combine="fisher",verbose=T, flag = 0)
}
